name: CI

on:
  push:
    branches: [ main, dev, staging, stage ]
  pull_request:
    branches: [ main, dev, staging, stage ]

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }} # Pastikan secret ini ada
  APP_NAME: expense-app

jobs:
  lint:
    name: ESLint Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Run ESLint
        run: npm run lint

  test:
    name: Jest Testing
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Install Supertest
        run: npm install --save-dev supertest
      - name: Run Unit Tests
        run: npm run test

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Install Supertest
        run: npm install --save-dev supertest
      - name: Run Tests with Coverage
        run: npm run test -- --coverage
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # Tidak perlu SONAR_HOST_URL jika default SonarCloud.io sudah bekerja

  docker-build-and-push: # Nama job diubah
    name: Docker Build and Push to GCR
    runs-on: ubuntu-latest
    needs: sonarcloud # Tetap menunggu SonarCloud
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}' # Pastikan secret ini ada#

      - name: Configure Docker to use Google Cloud Registry
        run: gcloud auth configure-docker

      - name: Docker Build Image
        # Bangun image dengan tag aplikasi dan versi tertentu
        run: docker build -t ${{ env.APP_NAME }}:latest .

      - name: Tag and Push Docker Image to GCR
        run: |
          # Tag dengan SHA commit untuk versi yang unik
          docker tag ${{ env.APP_NAME }}:latest gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.APP_NAME }}:${{ github.sha }}
          # Tag juga dengan 'latest' untuk kemudahan deployment
          docker tag ${{ env.APP_NAME }}:latest gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.APP_NAME }}:latest
          docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.APP_NAME }}:${{ github.sha }}
          docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.APP_NAME }}:latest